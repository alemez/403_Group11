0 .\netty\codec\src\main\java\io\netty\handler\codec\compression\Bzip2HuffmanAllocator.java 116      * A final allocation pass that relocates nodes in order to achieve a maximum code length limit.

1 .\netty\codec-http\src\main\java\io\netty\handler\codec\http\websocketx\TextWebSocketFrame.java 44      * Creates a new text frame with the specified binary data. The final fragment flag is set to true.

2 .\netty\codec-http\src\main\java\io\netty\handler\codec\http\websocketx\TextWebSocketFrame.java 76      * Creates a new text frame with the specified binary data. The final fragment flag is set to true.

3 .\netty\codec-http2\src\main\java\io\netty\handler\codec\http2\DefaultHttp2Connection.java 140                     // If modifications of the activeStream map is allowed, then a stream close operation will also

4 .\netty\codec-http2\src\main\java\io\netty\handler\codec\http2\Http2ConnectionHandler.java 604             // Don't write a RST_STREAM frame if we are not aware of the stream, or if we have already written one.

5 .\netty\codec-memcache\src\main\java\io\netty\handler\codec\memcache\binary\AbstractBinaryMemcacheDecoder.java 34 public abstract class AbstractBinaryMemcacheDecoder<M extends BinaryMemcacheMessage>

6 .\netty\codec-memcache\src\main\java\io\netty\handler\codec\memcache\binary\AbstractBinaryMemcacheEncoder.java 26 public abstract class AbstractBinaryMemcacheEncoder<M extends BinaryMemcacheMessage>

7 .\netty\codec-socks\src\main\java\io\netty\handler\codec\socks\SocksAuthRequest.java 30     private static final SocksSubnegotiationVersion SUBNEGOTIATION_VERSION = SocksSubnegotiationVersion.AUTH_PASSWORD;

8 .\netty\codec-socks\src\main\java\io\netty\handler\codec\socks\SocksAuthResponse.java 26     private static final SocksSubnegotiationVersion SUBNEGOTIATION_VERSION = SocksSubnegotiationVersion.AUTH_PASSWORD;

9 .\netty\codec-socks\src\main\java\io\netty\handler\codec\socks\SocksCmdResponse.java 36     // All arrays are initialized on construction time to 0/false/null remove array Initialization

10 .\netty\common\src\main\java\io\netty\util\concurrent\FastThreadLocalThread.java 65      * Sets the internal data structure that keeps the thread-local variables bound to this thread.

11 .\netty\common\src\main\java\io\netty\util\internal\SpscLinkedQueue.java 35  * 1024 Cores</a> by D. Vyukov. The original has been adapted to Java and it's quirks with regards to memory

12 .\netty\transport\src\main\java\io\netty\channel\AbstractChannelHandlerContext.java 41     // These needs to be volatile as otherwise an other Thread may see an half initialized instance.

13 .\netty\transport\src\main\java\io\netty\channel\Channel.java 397      * {@link ChannelInboundHandler#channelRead(ChannelHandlerContext, Object)} event if data was

14 .\netty\transport\src\main\java\io\netty\channel\ChannelHandlerContext.java 405      * {@link ChannelInboundHandler#channelRead(ChannelHandlerContext, Object)} event if data was

15 .\netty\transport\src\main\java\io\netty\channel\ChannelPipeline.java 919      * {@link ChannelInboundHandler#channelRead(ChannelHandlerContext, Object)} event if data was

16 .\netty\transport\src\main\java\io\netty\channel\SingleThreadEventLoop.java 77      * Marker interface for {@link Runnable} that will not trigger an {@link #wakeup(boolean)} in all cases.

17 .\netty\transport\src\main\java\io\netty\channel\local\LocalChannel.java 388         // we keep track of the task, and coordinate later that our read can't happen until the peer is done.

18 .\netty\transport\src\main\java\io\netty\channel\socket\DefaultDatagramChannelConfig.java 217     public DatagramChannelConfig setLoopbackModeDisabled(boolean loopbackModeDisabled) {

19 .\netty\transport\src\main\java\io\netty\channel\socket\nio\NioDatagramChannelConfig.java 158     public DatagramChannelConfig setLoopbackModeDisabled(boolean loopbackModeDisabled) {

20 .\netty\transport-native-epoll\src\main\java\io\netty\channel\epoll\EpollDatagramChannelConfig.java 304     public DatagramChannelConfig setLoopbackModeDisabled(boolean loopbackModeDisabled) {

